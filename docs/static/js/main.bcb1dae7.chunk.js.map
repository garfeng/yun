{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["kServer","fullUrl","path","timecode_s","Math","floor","Date","getTime","toString","s","replace","h","sha1","concat","urlOf","Data","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderImage","bind","assertThisInitialized","renderDir","renderOthrerFile","ShowImage","toggle","state","show_image","imgObj","Image","data","filename","type","url","setState","t","toLocaleDateString","toLocaleTimeString","react_default","a","createElement","className","style","fontSize","fileSize","filesize","fileModTime","mod_time","ListGroupItem","Modal","size","isOpen","ModalHeader","ModalBody","width","src","alt","href","window","location","hash","onClick","target","rel","Badge","color","otherInfo","App_Dir","RegExp","test","Component","Dir","_this2","show","list","readme","fetched","ShowUrl","onDataGet","fetchDir","fetchAndShow","showReadme","toggleUrl","refs","innerHTML","marked","fetch","then","json","document","execCommand","currentUrl","host","pathname","isRoot","textAlign","Input","bsSize","readOnly","value","SelectAll","ref","display","paddingLeft","App_DirList","DirList","i","App_Data","key","b","list_dir","list_file","push","sort","sortFunc","ListGroup","map","OneLine","Root","path2","path3","decodeURI","App","Container","Row","Col","lg","App_Root","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcb1dae7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport  sha1 from 'sha1';\nimport  marked from 'marked';\n\nimport {ListGroup, ListGroupItem,Modal,ModalHeader,ModalBody, Badge,Container,Row,Col, Input} from 'reactstrap';\n\nconst kServer = \"https://garfeng.net/\";\n\nfunction urlOf(path) {\n  const timecode = Math.floor(new Date().getTime() / 1000);\n  const timecode_s = timecode.toString(10);\n  const s = path.replace(/\\//ig,\"\");\n  const h = sha1(timecode_s+s);\n  return `data/${timecode_s}/${h}/${path}`;\n}\n\nfunction fullUrl(path) {\n  return kServer + urlOf(path);\n}\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderImage = this.renderImage.bind(this);\n    this.renderDir = this.renderDir.bind(this);\n    this.renderOthrerFile = this.renderOthrerFile.bind(this);\n    this.ShowImage = this.ShowImage.bind(this);\n    this.toggle = this.toggle.bind(this);\n    \n    this.state = {\n      show_image:false\n    };\n    this.imgObj = new Image();\n\n    const data = this.props.data || {\"filename\":\"\",\"path\":\"\",\"type\":\"dir\"};\n    this.url = fullUrl(data.path);\n  }\n\n  ShowImage(){\n    this.toggle();\n  }\n\n  toggle(){\n    this.setState({show_image:!this.state.show_image});\n  }\n\n  fileSize(data){\n    if(data < 1024) {\n      return `${data} b`;\n    }\n    data = data >> 10;\n    if(data < 1024) {\n      return `${data} Kb`;\n    }\n\n    data = data >> 10;\n\n    if(data < 1024) {\n      return `${data} Mb`;\n    }\n\n    data = data >> 10;\n\n    return `${data} Gb`;\n  }\n\n  fileModTime(data) {\n    var t = new Date(data * 1000);\n    return t.toLocaleDateString() + \" \" + t.toLocaleTimeString();\n  }\n\n  otherInfo(data){\n    return <span className=\"text-muted\" style={{fontSize:\"0.8em\"}}>{\" \"}({this.fileSize(data.filesize||0)} - {this.fileModTime(data.mod_time||0)})</span>\n  }\n\n  renderImage(){\n    const data = this.props.data || {\"filename\":\"\",\"path\":\"\",\"type\":\"dir\"};\n    const fullPath = `data/1/image/${data.path}`;\n    const s = fullPath.replace(/\\/\\//ig,\"\");\n    this.url = kServer + s;\n    return <ListGroupItem>\n      <Modal size=\"lg\" isOpen={this.state.show_image} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>{data.filename}</ModalHeader>\n          <ModalBody>\n            <img width=\"100%\" src={this.url} alt={data.filename}/>\n          </ModalBody>\n        </Modal>\n        <a href={window.location.hash || \"#/\"}  onClick={this.ShowImage}>\n  {data.filename}</a> [<a href={window.location.hash || \"#/\"} onClick={this.ShowImage} >预览</a>] {\" | \"} [<a target=\"_blank\" rel=\"noopener noreferrer\" href={this.url}>下载</a>] <Badge color=\"primary\">图片</Badge>\n  {this.otherInfo(data)}\n  </ListGroupItem>\n  }\n\n  renderOthrerFile(){\n    const data = this.props.data;\n    return <ListGroupItem><a target=\"_blank\" rel=\"noopener noreferrer\" href={this.url}>{data.filename}</a> [<a target=\"_blank\" rel=\"noopener noreferrer\" href={this.url}>下载</a>] <Badge color=\"success\">文件</Badge>\n    {this.otherInfo(data)}\n    </ListGroupItem>\n  }\n\n  renderDir(){\n    return <Dir {...this.props}/>\n  }\n\n  render(){\n    const data = this.props.data || {\"filename\":\"\",\"path\":\"\",\"type\":\"dir\"};\n    if(data.type === \"dir\") {\n      return this.renderDir();\n    } else {\n      const filename = data.filename;\n      const reg = new RegExp(\"(\\\\.png|\\\\.jpg|\\\\.gif|\\\\.jpeg)$\",\"ig\");\n      if(reg.test(filename)) {\n        return this.renderImage();\n      } else {\n        return this.renderOthrerFile();\n      }\n    }\n  }\n}\n\nclass Dir extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show:this.props.show || false,\n      list:[],\n      readme:\"\",\n      fetched:false,\n      ShowUrl:false\n    };\n\n    if(!this.props.data) {\n      this.state.show = true;\n    }\n\n    this.onDataGet = this.onDataGet.bind(this);\n    this.fetchDir = this.fetchDir.bind(this);\n    this.fetchAndShow = this.fetchAndShow.bind(this);\n    this.showReadme = this.showReadme.bind(this);\n    this.toggleUrl = this.toggleUrl.bind(this);\n    const data = this.props.data || {\"filename\":\"\",\"path\":\"\",\"type\":\"dir\"};\n    this.url = this.fullUrl(data.path);\n  }\n\n  onDataGet(data) {\n    this.setState(data);\n    this.showReadme();\n  }\n\n  showReadme(){\n    if(this.state.readme) {\n      this.refs[\"info\"].innerHTML = marked(this.state.readme);\n    }\n  }\n\n  urlOf(path) {\n    var b = `data/0/dir/${path}`;\n    return b.replace(/\\/\\//ig,'/');\n  }\n  \n  fullUrl(path) {\n    return kServer + this.urlOf(path);\n  }\n\n\n  fetchDir() {\n    if(this.state.fetched) {\n      this.showReadme();\n      return;\n    }\n    this.setState({fetched:true});\n    fetch(this.url).then(data=>data.json()).then(this.onDataGet);\n  }\n\n  componentDidMount(){\n    if(this.state.show) {\n      this.fetchDir();\n    }\n  }\n\n  fetchAndShow(){\n    this.setState({show: !this.state.show});\n    this.fetchDir();\n  }\n\n  SelectAll(){\n    document.execCommand(\"SelectAll\");\n    document.execCommand(\"Copy\");\n  }\n\n  toggleUrl(){\n    this.setState({ShowUrl:!this.state.ShowUrl});\n  }\n\n  render(){\n    const data = this.props.data || {\"filename\":\"\",\"path\":\"\",\"type\":\"dir\"};\n    var currentUrl = window.location.host+window.location.pathname+\"/#/\"+data.path;\n    currentUrl = currentUrl.replace(/\\/\\//ig,\"/\");\n    \n    return (\n    <ListGroupItem>\n      {!this.props.isRoot && <div><a  href={window.location.hash || \"#/\"} onClick={this.fetchAndShow}>{data.filename} [{this.state.show?\"收起\":\"展开\"}] </a> [<a  href={window.location.hash || \"#/\"}  onClick={this.toggleUrl}>链接</a>] <Badge color=\"secondary\">目录</Badge>\n      </div>}\n      {this.props.isRoot && <div><h2>目录：{data.filename}</h2> \n      <div style={{textAlign:\"right\"}}>\n      [<a href={window.location.hash || \"#/\"}  onClick={this.toggleUrl}>链接</a>]</div>\n       <hr/></div>}\n      <Modal isOpen={this.state.ShowUrl} toggle={this.toggleUrl} className={this.props.className}>\n        <ModalHeader toggle={this.toggleUrl}>获取文件夹链接</ModalHeader>\n        <ModalBody>\n          <Input bsSize=\"sm\" readOnly value={`http://${currentUrl}`} onClick={this.SelectAll}/>\n        </ModalBody>\n      </Modal>\n      <div className=\"text-primary\" ref=\"info\" style={{display:this.state.show?\"block\":\"none\", paddingLeft:\"1em\"}}></div>\n      {this.state.show && <DirList list={this.state.list}/>}\n    </ListGroupItem>\n    );\n  }\n}\n\nclass DirList extends Component {\n  OneLine(data, i) {\n    if(data.filename === \"cache.json\") {\n      return \"\";\n    }\n    return <Data data={data} key={data.filename} show={false}/>;\n  }\n\n  sortFunc(a,b) {\n    return b.mod_time - a.mod_time;\n  }\n\n  render(){\n    const list = this.props.list;\n    var list_dir = [];\n    var list_file = [];\n\n    for(var i in list) {\n      if(list[i].type === \"dir\") {\n        list_dir.push(list[i]);\n      } else {\n        list_file.push(list[i]);\n      }\n    }\n\n    list_dir.sort(this.sortFunc);\n    list_file.sort(this.sortFunc);\n\n   return <ListGroup>\n    {list_dir.map(this.OneLine)}\n    {list_file.map(this.OneLine)}\n    </ListGroup> ;\n  }\n}\n\nclass Root extends Component {\n  render(){\n    const path = window.location.hash;\n    const path2 = path.replace(\"#\",\"\") || \"/\";\n    const path3 = decodeURI(path2);\n    const data = {\n      path:path3,\n      filename: path3,\n      type:\"dir\"\n    }\n    return <Data show={true} data={data} isRoot={true}/>;\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n      <link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootswatch/4.3.1/flatly/bootstrap.min.css\" rel=\"stylesheet\" />\n      <Container>\n      <Row>\n        <Col lg={12}>\n          <Root />\n        </Col>\n      </Row>\n      </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}